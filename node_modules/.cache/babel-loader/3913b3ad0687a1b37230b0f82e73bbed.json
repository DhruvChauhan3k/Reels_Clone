{"ast":null,"code":"import React from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\n\nvar debounce = function debounce(fn, time) {\n  var timeout = void 0;\n  return function () {\n    var _this = this,\n        _arguments = arguments;\n\n    var functionCall = function functionCall() {\n      return fn.apply(_this, _arguments);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(functionCall, time);\n  };\n}; // https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id#6860916\n\n\nvar guidGenerator = function guidGenerator() {\n  var S4 = function S4() {\n    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n  };\n\n  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4();\n};\n\nfunction getHighest(elements) {\n  var highest = 0;\n  elements.forEach(function (el) {\n    if (el.rect && el.rect.height > highest) {\n      highest = el.rect.height;\n    }\n  });\n  return highest;\n}\n\nfunction nextTriggerOnMount(_ref) {\n  var rect = _ref.rect,\n      mode = _ref.mode,\n      prevOffset = _ref.prevOffset,\n      position = _ref.position,\n      direction = _ref.direction,\n      width = _ref.width;\n  if (mode !== 'chain') return false;\n\n  switch (direction) {\n    case 'toRight':\n      return position.from > 0;\n\n    case 'toLeft':\n    default:\n      return rect.width + position.from <= width;\n  }\n}\n\nfunction getFromOffset(_ref) {\n  var rect = _ref.rect,\n      offset = _ref.offset,\n      direction = _ref.direction;\n\n  switch (direction) {\n    case 'toRight':\n      return offset - rect.width;\n\n    case 'toLeft':\n    default:\n      return offset;\n  }\n}\n\nfunction getFrom(_ref2) {\n  var index = _ref2.index,\n      rect = _ref2.rect,\n      offset = _ref2.offset,\n      width = _ref2.width,\n      direction = _ref2.direction;\n  if (index === 0) return offset;\n\n  if (typeof offset === 'number') {\n    return getFromOffset({\n      rect: rect,\n      offset: offset,\n      direction: direction\n    });\n  }\n\n  switch (direction) {\n    case 'toRight':\n      return -rect.width;\n\n    case 'toLeft':\n    default:\n      return width;\n  }\n}\n\nfunction getTo(_ref3) {\n  var rect = _ref3.rect,\n      width = _ref3.width,\n      direction = _ref3.direction;\n\n  switch (direction) {\n    case 'toRight':\n      return width;\n\n    case 'toLeft':\n    default:\n      return -rect.width;\n  }\n}\n\nfunction getNext(_ref4) {\n  var mode = _ref4.mode,\n      from = _ref4.from,\n      direction = _ref4.direction,\n      rect = _ref4.rect,\n      width = _ref4.width;\n  var start = from || 0;\n\n  switch (mode) {\n    case 'await':\n      switch (direction) {\n        case 'toRight':\n          return width;\n\n        case 'toLeft':\n        default:\n          return -rect.width;\n      }\n\n    case 'smooth':\n      switch (direction) {\n        case 'toRight':\n          return rect.width > width ? 0 : width - rect.width;\n\n        case 'toLeft':\n        default:\n          return rect.width > width ? width - rect.width : 0;\n      }\n\n    case 'chain':\n    default:\n      switch (direction) {\n        case 'toRight':\n          return 0;\n\n        case 'toLeft':\n        default:\n          return rect.width + start > width ? width - rect.width : width - rect.left - rect.width;\n      }\n\n  }\n}\n\nvar getPosition = function getPosition(_ref5) {\n  var mode = _ref5.mode,\n      index = _ref5.index,\n      rect = _ref5.rect,\n      offset = _ref5.offset,\n      width = _ref5.width,\n      direction = _ref5.direction;\n  var from = getFrom({\n    index: index,\n    rect: rect,\n    offset: offset,\n    width: width,\n    direction: direction\n  });\n  var to = getTo({\n    rect: rect,\n    width: width,\n    direction: direction\n  });\n  return {\n    from: from,\n    to: to,\n    next: getNext({\n      mode: mode,\n      from: from,\n      direction: direction,\n      rect: rect,\n      width: width\n    })\n  };\n};\n\nfunction getNextOffset(_ref) {\n  var from = _ref.from,\n      rect = _ref.rect,\n      direction = _ref.direction;\n\n  switch (direction) {\n    case 'toRight':\n      {\n        return from;\n      }\n\n    case 'toLeft':\n    default:\n      {\n        return from + rect.width;\n      }\n  }\n}\n\nfunction getStartOffset(_ref) {\n  var offset = _ref.offset,\n      rect = _ref.rect,\n      direction = _ref.direction,\n      width = _ref.width;\n\n  if (offset === 'run-in') {\n    switch (direction) {\n      case 'toRight':\n        return -rect.width;\n\n      case 'toLeft':\n      default:\n        return width;\n    }\n  }\n\n  if (typeof offset === 'string') {\n    var offsetRelative = Number(offset.replace('%', ''));\n    if (offsetRelative) return width / 100 * offsetRelative;\n  }\n\n  return offset;\n}\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar TickerElement = function (_React$Component) {\n  inherits(TickerElement, _React$Component);\n\n  function TickerElement() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TickerElement);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TickerElement.__proto__ || Object.getPrototypeOf(TickerElement)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      children: _this.props.children({\n        index: _this.props.index\n      }),\n      move: _this.props.move,\n      position: {\n        from: undefined,\n        to: undefined,\n        next: undefined\n      },\n      offset: _this.props.offset,\n      rect: null\n    }, _this.x = 0, _this.isMoving = false, _this.nextTriggered = false, _this.elementRef = React.createRef(), _this.raf = null, _this.componentDidMount = function () {\n      _this.setPosition(true);\n\n      _this.observer = new MutationObserver(_this.onMutation);\n\n      _this.observer.observe(_this.elementRef.current, {\n        characterData: true,\n        childList: true,\n        subtree: true\n      });\n    }, _this.componentWillUnmount = function () {\n      _this.observer.disconnect();\n    }, _this.onMutation = function () {\n      _this.setPosition();\n    }, _this.componentDidUpdate = function (prevProps, prevState) {\n      if (!_this.x && prevState.position.from !== _this.state.position.from) {\n        _this.x = _this.state.position.from;\n        _this.elementRef.current.style.transform = 'translate3d(' + _this.x + 'px, 0, 0)';\n      }\n\n      if (_this.x !== _this.state.position.from && prevProps.prevRect && _this.props.prevRect && prevProps.prevRect.width !== _this.props.prevRect.width) {\n        if (_this.props.offset) {\n          _this.x = _this.x + (_this.props.offset - prevProps.offset);\n        } else {\n          _this.x = _this.x + (_this.props.prevRect.width - prevProps.prevRect.width);\n        }\n\n        _this.elementRef.current.style.transform = 'translate3d(' + _this.x + 'px, 0, 0)';\n      }\n\n      if (_this.props.move && !prevProps.start && _this.props.start) {\n        _this.animate();\n      }\n\n      if (_this.props.start && !prevProps.move && _this.props.move) {\n        _this.animate();\n      }\n\n      if (prevProps.move && !_this.props.move) {\n        _this.isMoving = false;\n        window.cancelAnimationFrame(_this.raf);\n      }\n    }, _this.setPosition = function (isMount) {\n      var _this$props = _this.props,\n          mode = _this$props.mode,\n          width = _this$props.width,\n          id = _this$props.id,\n          onNext = _this$props.onNext,\n          direction = _this$props.direction,\n          index = _this$props.index,\n          setRect = _this$props.setRect;\n\n      var rect = _this.elementRef.current.getBoundingClientRect();\n\n      if (rect.width === 0) return;\n      var offset = _this.props.index === 0 ? getStartOffset({\n        offset: _this.props.offset,\n        rect: rect,\n        direction: direction,\n        width: width\n      }) : _this.props.offset;\n      var position = getPosition({\n        mode: mode,\n        rect: rect,\n        index: index,\n        offset: offset,\n        width: width,\n        direction: direction\n      });\n      setRect({\n        index: _this.props.index,\n        rect: rect,\n        offset: offset,\n        nextOffset: getNextOffset({\n          from: position.from,\n          rect: rect,\n          direction: direction\n        })\n      });\n\n      if (isMount) {\n        var nextTriggerOnMount$$1 = nextTriggerOnMount({\n          mode: mode,\n          rect: rect,\n          position: position,\n          offset: offset,\n          direction: direction,\n          width: width\n        });\n\n        if (nextTriggerOnMount$$1) {\n          onNext({\n            id: id,\n            index: index,\n            rect: rect,\n            nextOffset: getNextOffset({\n              from: position.from,\n              rect: rect,\n              direction: direction\n            })\n          });\n        }\n\n        if (!nextTriggerOnMount$$1 && (offset || index === 0)) {\n          onNext({\n            id: id,\n            index: index,\n            rect: rect\n          });\n        }\n\n        _this.nextTriggered = nextTriggerOnMount$$1;\n      }\n\n      _this.setState({\n        rect: rect,\n        offset: offset,\n        position: position\n      });\n    }, _this.shouldTriggerNext = function () {\n      if (_this.nextTriggered) return false;\n      return _this.props.direction === 'toLeft' ? _this.x <= _this.state.position.next : _this.x >= _this.state.position.next;\n    }, _this.triggerNext = function () {\n      if (_this.shouldTriggerNext()) {\n        // if (this.props.index === 5) console.log(this.x)\n        _this.nextTriggered = true;\n\n        _this.props.onNext({\n          id: _this.props.id,\n          index: _this.props.index,\n          rect: _this.state.rect\n        });\n      }\n    }, _this.shouldFinish = function () {\n      switch (_this.props.direction) {\n        case 'toRight':\n          return _this.x >= _this.state.position.to;\n\n        case 'toLeft':\n        default:\n          return _this.x <= _this.state.position.to;\n      }\n    }, _this.animate = function () {\n      if (_this.isMoving) return;\n      _this.isMoving = true;\n      var prevTimestamp = null;\n\n      var step = function step(timestamp) {\n        if (!_this.isMoving) return;\n        if (!_this.elementRef.current) return;\n        var progress = prevTimestamp ? timestamp - prevTimestamp : 0;\n        _this.x = _this.props.direction === 'toLeft' ? _this.x - progress / 100 * _this.props.speed : _this.x + progress / 100 * _this.props.speed;\n        _this.elementRef.current.style.transform = 'translate3d(' + _this.x + 'px, 0, 0)';\n\n        _this.triggerNext();\n\n        if (_this.shouldFinish()) {\n          _this.isMoving = false;\n          prevTimestamp = null;\n\n          _this.props.onFinish(_this.props.id);\n        } else {\n          prevTimestamp = timestamp;\n          _this.raf = window.requestAnimationFrame(step);\n        }\n      };\n\n      _this.raf = window.requestAnimationFrame(step);\n    }, _this.render = function () {\n      return React.createElement('div', {\n        className: 'ticker__element',\n        style: {\n          willChange: 'transform',\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          transform: 'translate3d(' + _this.x + 'px, 0, 0)'\n        },\n        ref: _this.elementRef\n      }, _this.state.children);\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  return TickerElement;\n}(React.Component);\n\nTickerElement.propTypes = {\n  children: oneOfType([node, func]).isRequired,\n  direction: string.isRequired,\n  speed: number.isRequired,\n  id: string.isRequired,\n  index: number.isRequired,\n  mode: string.isRequired,\n  move: bool.isRequired,\n  onNext: func.isRequired,\n  onFinish: func.isRequired,\n  setRect: func.isRequired,\n  start: bool.isRequired,\n  offset: oneOfType([number, string]),\n  prevRect: object,\n  width: number\n};\nTickerElement.defaultProps = {\n  offset: undefined,\n  width: undefined,\n  prevRect: null\n};\n\nvar getDefaultState = function getDefaultState(offset, width) {\n  return {\n    elements: [{\n      id: guidGenerator(),\n      index: 0,\n      height: 0,\n      start: false,\n      offset: offset,\n      rect: null,\n      prevRect: null\n    }],\n    width: width,\n    height: 0\n  };\n};\n\nvar Ticker = function (_React$Component) {\n  inherits(Ticker, _React$Component);\n\n  function Ticker() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, Ticker);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Ticker.__proto__ || Object.getPrototypeOf(Ticker)).call.apply(_ref, [this].concat(args))), _this), _this.next = null, _this.state = getDefaultState(_this.props.offset), _this.tickerRef = React.createRef(), _this.dOnResize = debounce(function () {\n      return _this.onResize();\n    }, 150), _this.componentDidMount = function () {\n      _this.setState({\n        width: _this.tickerRef.current.offsetWidth,\n        height: _this.props.height\n      });\n\n      window.addEventListener('resize', _this.dOnResize);\n    }, _this.componentWillUnmount = function () {\n      window.removeEventListener('resize', _this.dOnResize);\n    }, _this.setRect = function (_ref2) {\n      var index = _ref2.index,\n          rect = _ref2.rect,\n          offset = _ref2.offset,\n          nextOffset = _ref2.nextOffset;\n\n      _this.setState(function (prevState) {\n        var elements = prevState.elements.map(function (el) {\n          var newEl = el;\n          if (el.index === index) newEl.rect = rect; // next element\n\n          if (el.index === index + 1) {\n            newEl.prevRect = rect;\n\n            if (newEl.offset) {\n              newEl.offset = nextOffset;\n            }\n          }\n\n          return newEl;\n        });\n        return {\n          elements: elements,\n          height: _this.props.height ? prevState.height : getHighest(elements)\n        };\n      });\n    }, _this.onResize = function () {\n      if (!_this.tickerRef.current || _this.tickerRef.current.offsetWidth === _this.state.width) return;\n\n      _this.setState(_extends({}, getDefaultState(_this.props.offset, _this.tickerRef.current.offsetWidth), {\n        height: _this.props.height\n      }));\n    }, _this.onFinish = function (id) {\n      _this.props.onFinish();\n\n      _this.setState(function (prevState) {\n        return {\n          elements: prevState.elements.filter(function (el) {\n            return el.id !== id;\n          })\n        };\n      });\n    }, _this.onNext = function (_ref3) {\n      var id = _ref3.id,\n          index = _ref3.index,\n          rect = _ref3.rect,\n          nextOffset = _ref3.nextOffset;\n\n      _this.props.onNext(index);\n\n      _this.setState(function (prevState) {\n        return {\n          elements: [].concat(toConsumableArray(prevState.elements.map(function (el) {\n            var newEl = el;\n            if (el.index === index) newEl.rect = rect;\n\n            if (el.index === 0 || el.offset || newEl.index === index + 1) {\n              newEl.start = true;\n            }\n\n            return newEl; // create new element\n          })), [{\n            id: guidGenerator(),\n            index: prevState.elements[prevState.elements.length - 1].index + 1,\n            height: 0,\n            start: false,\n            offset: nextOffset,\n            rect: null,\n            prevRect: rect\n          }])\n        };\n      });\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(Ticker, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement('div', {\n        className: 'ticker',\n        ref: this.tickerRef,\n        style: {\n          position: 'relative',\n          overflow: 'hidden',\n          height: this.state.height && this.state.height + 'px'\n        }\n      }, this.state.width && this.state.elements.map(function (el) {\n        return React.createElement(TickerElement, {\n          key: el.id,\n          id: el.id,\n          index: el.index,\n          start: el.start,\n          offset: el.offset,\n          prevRect: el.prevRect,\n          direction: _this2.props.direction,\n          mode: _this2.props.mode,\n          move: _this2.props.move,\n          speed: _this2.props.speed,\n          onFinish: _this2.onFinish,\n          onNext: _this2.onNext,\n          setRect: _this2.setRect,\n          width: _this2.state.width\n        }, _this2.props.children);\n      }));\n    }\n  }]);\n  return Ticker;\n}(React.Component);\n\nTicker.propTypes = {\n  children: oneOfType([node, func]).isRequired,\n  direction: string,\n  mode: string,\n  move: bool,\n  offset: oneOfType([number, string]),\n  speed: number,\n  height: oneOfType([number, string]),\n  onNext: func,\n  onFinish: func\n};\nTicker.defaultProps = {\n  offset: 0,\n  speed: 5,\n  direction: 'toLeft',\n  mode: 'chain',\n  move: true,\n  height: undefined,\n  onNext: function onNext() {},\n  onFinish: function onFinish() {}\n};\nexport default Ticker;","map":{"version":3,"mappings":"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","names":["debounce","fn","time","timeout","functionCall","apply","_this","arguments","setTimeout","guidGenerator","S4","Math","random","toString","substring","getHighest","elements","highest","forEach","el","rect","height","nextTriggerOnMount","mode","prevOffset","position","direction","width","from","getFromOffset","offset","getFrom","index","getTo","getNext","start","left","getPosition","to","getNextOffset","getStartOffset","offsetRelative","Number","replace","TickerElement","state","props","children","move","undefined","next","x","isMoving","nextTriggered","elementRef","React","createRef","raf","componentDidMount","setPosition","observer","MutationObserver","onMutation","observe","current","characterData","childList","subtree","componentWillUnmount","disconnect","componentDidUpdate","prevProps","prevState","style","transform","prevRect","animate","cancelAnimationFrame","isMount","id","onNext","setRect","getBoundingClientRect","shouldNextTriggerOnMount","setState","shouldTriggerNext","triggerNext","shouldFinish","prevTimestamp","step","timestamp","progress","speed","onFinish","window","requestAnimationFrame","render","Component","propTypes","oneOfType","node","func","isRequired","string","number","bool","object","defaultProps","getDefaultState","Ticker","tickerRef","dOnResize","onResize","offsetWidth","addEventListener","removeEventListener","nextOffset","map","newEl","_extends","filter","length","_this2"],"sources":["D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\utils\\debounce.js","D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\utils\\guidGenerator.js","D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\utils\\getHighest.js","D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\utils\\shouldNextTriggerOnMount.js","D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\utils\\getPosition.js","D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\utils\\getNextOffset.js","D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\utils\\getStartOffset.js","D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\Element.js","D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\utils\\getDefaultState.js","D:\\Coding\\web development\\my\\Reels Clone\\ig-reels\\node_modules\\react-ticker\\src\\index.js"],"sourcesContent":["const debounce = (fn, time) => {\n  let timeout\n\n  return function () {\n    const functionCall = () => fn.apply(this, arguments)\n\n    clearTimeout(timeout)\n    timeout = setTimeout(functionCall, time)\n  }\n}\n\nexport default debounce\n","// https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id#6860916\n\nexport default () => {\n  const S4 = () => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4())\n}\n","export default function getHighest(elements) {\n  let highest = 0\n  elements.forEach(el => {\n    if (el.rect && el.rect.height > highest) {\n      highest = el.rect.height\n    }\n  })\n  return highest\n}\n","export default function nextTriggerOnMount({ rect, mode, prevOffset, position, direction, width }) {\n  if (mode !== 'chain') return false\n  switch (direction) {\n    case 'toRight':\n      return position.from > 0\n    case 'toLeft':\n    default:\n      return rect.width + position.from <= width\n  }\n}\n","function getFromOffset({ rect, offset, direction }) {\n  switch (direction) {\n    case 'toRight':\n      return offset - rect.width\n    case 'toLeft':\n    default:\n      return offset\n  }\n}\n\nfunction getFrom({ index, rect, offset, width, direction }) {\n  if (index === 0) return offset\n\n  if (typeof offset === 'number') {\n    return getFromOffset({ rect, offset, direction })\n  }\n\n  switch (direction) {\n    case 'toRight':\n      return -rect.width\n    case 'toLeft':\n    default:\n      return width\n  }\n}\n\nfunction getTo({ rect, width, direction }) {\n  switch (direction) {\n    case 'toRight':\n      return width\n    case 'toLeft':\n    default:\n      return -rect.width\n  }\n}\n\nfunction getNext({ mode, from, direction, rect, width }) {\n  const start = from || 0\n\n  switch (mode) {\n    case 'await':\n      switch (direction) {\n        case 'toRight':\n          return width\n        case 'toLeft':\n        default:\n          return -rect.width\n      }\n    case 'smooth':\n      switch (direction) {\n        case 'toRight':\n          return rect.width > width\n            ? 0\n            : width - rect.width\n        case 'toLeft':\n        default:\n          return rect.width > width\n            ? width - rect.width\n            : 0\n      }\n    case 'chain':\n    default:\n      switch (direction) {\n        case 'toRight':\n          return 0\n        case 'toLeft':\n        default:\n          return rect.width + start > width\n            ? width - rect.width\n            : width - rect.left - rect.width\n      }\n  }\n}\n\nexport default ({ mode, index, rect, offset, width, direction }) => {\n  const from = getFrom({ index, rect, offset, width, direction })\n  const to = getTo({ rect, width, direction })\n  return {\n    from,\n    to,\n    next: getNext({ mode, from, direction, rect, width })\n  }\n}\n","export default function getNextOffset({ from, rect, direction }) {\n  switch (direction) {\n    case 'toRight': {\n      return from\n    }\n    case 'toLeft':\n    default: {\n      return from + rect.width\n    }\n  }\n}\n","export default function getStartOffset({ offset, rect, direction, width }) {\n  if (offset === 'run-in') {\n    switch (direction) {\n      case 'toRight':\n        return -rect.width\n      case 'toLeft':\n      default:\n        return width\n    }\n  }\n  if (typeof offset === 'string') {\n    const offsetRelative = Number(offset.replace('%', ''))\n    if (offsetRelative) return (width / 100) * offsetRelative\n  }\n  return offset\n}\n","import React from 'react'\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types'\n\nimport shouldNextTriggerOnMount from './utils/shouldNextTriggerOnMount'\nimport getPosition from './utils/getPosition'\nimport getNextOffset from './utils/getNextOffset'\nimport getStartOffset from './utils/getStartOffset'\n\nclass TickerElement extends React.Component {\n  static propTypes = {\n    children: oneOfType([node, func]).isRequired,\n    direction: string.isRequired,\n    speed: number.isRequired,\n    id: string.isRequired,\n    index: number.isRequired,\n    mode: string.isRequired,\n    move: bool.isRequired,\n    onNext: func.isRequired,\n    onFinish: func.isRequired,\n    setRect: func.isRequired,\n    start: bool.isRequired,\n\n    offset: oneOfType([number, string]),\n    prevRect: object,\n    width: number\n  }\n\n  static defaultProps = {\n    offset: undefined,\n    width: undefined,\n    prevRect: null\n  }\n\n  state = {\n    children: this.props.children({\n      index: this.props.index\n    }),\n    move: this.props.move,\n    position: { from: undefined, to: undefined, next: undefined },\n    offset: this.props.offset,\n    rect: null\n  }\n  x = 0\n  isMoving = false\n  nextTriggered = false\n  elementRef = React.createRef()\n  raf = null\n\n  componentDidMount = () => {\n    this.setPosition(true)\n    this.observer = new MutationObserver(this.onMutation)\n    this.observer.observe(this.elementRef.current, { characterData: true, childList: true, subtree: true })\n  }\n\n  componentWillUnmount = () => {\n    this.observer.disconnect()\n  }\n\n  onMutation = () => {\n    this.setPosition()\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (!this.x && prevState.position.from !== this.state.position.from) {\n      this.x = this.state.position.from\n      this.elementRef.current.style.transform = `translate3d(${this.x}px, 0, 0)`\n    }\n    if (this.x !== this.state.position.from &&\n      prevProps.prevRect &&\n      this.props.prevRect &&\n      prevProps.prevRect.width !== this.props.prevRect.width) {\n      if (this.props.offset) {\n        this.x = this.x + (this.props.offset - prevProps.offset)\n      } else {\n        this.x = this.x + (this.props.prevRect.width - prevProps.prevRect.width)\n      }\n      this.elementRef.current.style.transform = `translate3d(${this.x}px, 0, 0)`\n    }\n    if (this.props.move && !prevProps.start && this.props.start) {\n      this.animate()\n    }\n    if (this.props.start && !prevProps.move && this.props.move) {\n      this.animate()\n    }\n    if (prevProps.move && !this.props.move) {\n      this.isMoving = false\n      window.cancelAnimationFrame(this.raf)\n    }\n  }\n\n  setPosition = (isMount) => {\n    const {\n      mode,\n      width,\n      id,\n      onNext,\n      direction,\n      index,\n      setRect\n    } = this.props\n\n    const rect = this.elementRef.current.getBoundingClientRect()\n    if (rect.width === 0) return\n\n    const offset = this.props.index === 0\n      ? getStartOffset({ offset: this.props.offset, rect, direction, width })\n      : this.props.offset\n\n    const position = getPosition({ mode, rect, index, offset, width, direction })\n\n    setRect({\n      index: this.props.index,\n      rect,\n      offset,\n      nextOffset: getNextOffset({ from: position.from, rect, direction })\n    })\n\n    if (isMount) {\n      const nextTriggerOnMount = shouldNextTriggerOnMount({ mode, rect, position, offset, direction, width })\n      if (nextTriggerOnMount) {\n        onNext({\n          id,\n          index,\n          rect,\n          nextOffset: getNextOffset({ from: position.from, rect, direction })\n        })\n      }\n      if (!nextTriggerOnMount && (offset || index === 0)) {\n        onNext({ id, index, rect })\n      }\n      this.nextTriggered = nextTriggerOnMount\n    }\n\n    this.setState({\n      rect,\n      offset,\n      position\n    })\n  }\n\n  shouldTriggerNext = () => {\n    if (this.nextTriggered) return false\n    return this.props.direction === 'toLeft'\n      ? this.x <= this.state.position.next\n      : this.x >= this.state.position.next\n  }\n\n  triggerNext = () => {\n    if (this.shouldTriggerNext()) {\n      // if (this.props.index === 5) console.log(this.x)\n      this.nextTriggered = true\n      this.props.onNext({\n        id: this.props.id,\n        index: this.props.index,\n        rect: this.state.rect\n      })\n    }\n  }\n\n  shouldFinish = () => {\n    switch (this.props.direction) {\n      case 'toRight':\n        return this.x >= this.state.position.to\n      case 'toLeft':\n      default:\n        return this.x <= this.state.position.to\n    }\n  }\n\n  animate = () => {\n    if (this.isMoving) return\n    this.isMoving = true\n\n    let prevTimestamp = null\n\n    const step = (timestamp) => {\n      if (!this.isMoving) return\n      if (!this.elementRef.current) return\n\n      const progress = prevTimestamp\n        ? timestamp - prevTimestamp\n        : 0\n\n      this.x = this.props.direction === 'toLeft'\n        ? this.x - (progress / 100 * this.props.speed)\n        : this.x + (progress / 100 * this.props.speed)\n      this.elementRef.current.style.transform = `translate3d(${this.x}px, 0, 0)`\n      this.triggerNext()\n\n      if (this.shouldFinish()) {\n        this.isMoving = false\n        prevTimestamp = null\n        this.props.onFinish(this.props.id)\n      } else {\n        prevTimestamp = timestamp\n        this.raf = window.requestAnimationFrame(step)\n      }\n    }\n    this.raf = window.requestAnimationFrame(step)\n  }\n\n  render = () => (\n    <div\n      className='ticker__element'\n      style={{\n        willChange: 'transform',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        transform: `translate3d(${this.x}px, 0, 0)`\n      }}\n      ref={this.elementRef}\n    >\n      {this.state.children}\n    </div>\n  )\n}\n\nexport default TickerElement\n","\nimport guidGenerator from './guidGenerator'\n\nconst getDefaultState = (offset, width) => ({\n  elements: [{\n    id: guidGenerator(),\n    index: 0,\n    height: 0,\n    start: false,\n    offset: offset,\n    rect: null,\n    prevRect: null\n  }],\n  width,\n  height: 0\n})\n\nexport default getDefaultState\n","import React from 'react'\nimport {bool, func, node, number, oneOfType, string} from 'prop-types'\nimport debounce from './utils/debounce'\nimport guidGenerator from './utils/guidGenerator'\nimport getHighest from './utils/getHighest'\nimport TickerElement from './Element'\nimport getDefaultState from './utils/getDefaultState'\n\nexport default class Ticker extends React.Component {\n  static propTypes = {\n    children: oneOfType([node, func]).isRequired,\n\n    direction: string,\n    mode: string,\n    move: bool,\n    offset: oneOfType([number, string]),\n    speed: number,\n    height: oneOfType([number, string]),\n    onNext: func,\n    onFinish: func\n  }\n\n  static defaultProps = {\n    offset: 0,\n    speed: 5,\n    direction: 'toLeft',\n    mode: 'chain',\n    move: true,\n    height: undefined,\n    onNext: () => {},\n    onFinish: () => {}\n  }\n  next = null\n  state = getDefaultState(this.props.offset)\n  tickerRef = React.createRef()\n\n  dOnResize = debounce(() => this.onResize(), 150)\n\n  componentDidMount = () => {\n    this.setState({\n      width: this.tickerRef.current.offsetWidth,\n      height: this.props.height\n    })\n    window.addEventListener('resize', this.dOnResize)\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.dOnResize)\n  }\n\n  setRect = ({index, rect, offset, nextOffset}) => {\n    this.setState(prevState => {\n      const elements = prevState.elements.map(el => {\n        const newEl = el\n        if (el.index === index) newEl.rect = rect\n        // next element\n        if (el.index === index + 1) {\n          newEl.prevRect = rect\n          if (newEl.offset) {\n            newEl.offset = nextOffset\n          }\n        }\n        return newEl\n      })\n      return {\n        elements,\n        height: this.props.height\n          ? prevState.height\n          : getHighest(elements)\n      }\n    })\n  }\n\n  onResize = () => {\n    if (!this.tickerRef.current || this.tickerRef.current.offsetWidth === this.state.width) return\n    this.setState({\n      ...getDefaultState(this.props.offset, this.tickerRef.current.offsetWidth),\n      height: this.props.height\n    })\n  }\n\n  onFinish = (id) => {\n    this.props.onFinish()\n    this.setState(prevState => ({\n      elements: prevState.elements.filter(el => el.id !== id)\n    }))\n  }\n\n  onNext = ({id, index, rect, nextOffset}) => {\n    this.props.onNext(index)\n\n    this.setState(prevState => ({\n      elements: [\n        // start next element\n        ...prevState.elements.map(el => {\n          const newEl = el\n          if (el.index === index) newEl.rect = rect\n          if (el.index === 0 || el.offset || newEl.index === index + 1) {\n            newEl.start = true\n          }\n          return newEl\n          // create new element\n        }), {\n          id: guidGenerator(),\n          index: prevState.elements[prevState.elements.length - 1].index + 1,\n          height: 0,\n          start: false,\n          offset: nextOffset,\n          rect: null,\n          prevRect: rect\n        }\n      ]\n    }))\n  }\n\n  render() {\n\n    return (\n      <div\n        className='ticker'\n        ref={this.tickerRef}\n        style={{\n          position: 'relative',\n          overflow: 'hidden',\n          height: this.state.height && `${this.state.height}px`\n        }}\n      >\n        {\n          this.state.width && this.state.elements.map(el => {\n            return (\n              <TickerElement\n                key={el.id}\n                id={el.id}\n                index={el.index}\n                start={el.start}\n                offset={el.offset}\n                prevRect={el.prevRect}\n\n                direction={this.props.direction}\n                mode={this.props.mode}\n                move={this.props.move}\n                speed={this.props.speed}\n\n                onFinish={this.onFinish}\n                onNext={this.onNext}\n                setRect={this.setRect}\n                width={this.state.width}\n              >\n                {this.props.children}\n              </TickerElement>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}